server.port=8080
server.serverHeader=collection
#应用程序名称
spring.application.name=cityManage
#引入其他配置文件，受理中心配置
spring.profiles.include=accept-center
spring.cache.type=caffeine
#缓存的名字，对应 @Cacheable注解中的value，可设置多个
spring.cache.cache-names=commonCaffeine,commonCaffeine22
#初始缓存数量，最大缓存数量，最后一次写入后失效时间
spring.cache.caffeine.spec=initialCapacity=100,maximumSize=1000,expireAfterWrite=60m
spring.datasource.name=mysql_test
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#druid相关配置
#监控统计拦截的filters
spring.datasource.druid.filters=stat
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
#基本属性
#spring.datasource.druid.url=jdbc:mysql://localhost:3306/poic?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false&serverTimezone=UTC
#spring.datasource.druid.username=root
#spring.datasource.druid.password=mycp1122
spring.datasource.druid.url=jdbc:mysql://94.191.38.143:3306/city_management?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false&serverTimezone=UTC
spring.datasource.druid.username=root
spring.datasource.druid.password=Aa.654321
#配置初始化大小/最小/最大
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
#获取连接等待超时时间
spring.datasource.druid.max-wait=60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis=60000
#一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#mybatis配置
mybatis.mapper-locations=classpath:mapper/base/*.xml,mapper/ext/*.xml
mybatis.type-aliases-package=com.city.management.collection.model
#是否支持livereload
spring.devtools.livereload.enabled=true 
devtools.livereload.port=35729
#是否支持热部署
spring.devtools.restart.enabled=true
logging.level.com.ucar.sonar.dao.ext=debug
management.endpoint.health.show-details=always
#redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=94.191.38.143
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=200  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10 
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  
# 连接超时时间（毫秒）
spring.redis.timeout=1000
#httpclient配置
#最大连接数
http.maxTotal=300
#每个实例的最大连接
http.defaultMaxPerRoute=50
#tcp握手时间即连接远程服务时间
http.connectTimeout=1000
#从连接池获取连接的超时时间
http.connectionRequestTimeout=500
#连接建立后，数据传输过程中数据包之间间隔的最大时间
http.socketTimeout=5000
http.staleConnectionCheckEnabled=true
#shiro缓存时间
shiro.redis.cacheManager.expire=600

logging.level.com.city.management.collection.mapper=debug
