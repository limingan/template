<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.city.management.collection.mapper.base.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.city.management.collection.model.base.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="TENANT_ID" jdbcType="VARCHAR" property="tenantId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="FILE_PATH" jdbcType="VARCHAR" property="filePath" />
    <result column="BEGIN_TIME" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="IS_SEND" jdbcType="VARCHAR" property="isSend" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
    <result column="SENDER" jdbcType="VARCHAR" property="sender" />
    <result column="create_sender" jdbcType="VARCHAR" property="createSender" />
    <result column="ACCEPT_TYPE" jdbcType="VARCHAR" property="acceptType" />
    <result column="ACCEPT_USERS" jdbcType="VARCHAR" property="acceptUsers" />
    <result column="accept_names" jdbcType="VARCHAR" property="acceptNames" />
    <result column="CHANNEL_TYPE" jdbcType="VARCHAR" property="channelType" />
    <result column="SENDER_NAME" jdbcType="VARCHAR" property="senderName" />
    <result column="ISTOP" jdbcType="VARCHAR" property="istop" />
    <result column="NOTICETYPE" jdbcType="VARCHAR" property="noticetype" />
    <result column="isUrgency" jdbcType="VARCHAR" property="isurgency" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.city.management.collection.model.base.Notice">
    <result column="CONTENT" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, TENANT_ID, TITLE, SEND_TIME, FILE_PATH, BEGIN_TIME, IS_SEND, STATUS, END_TIME, 
    SENDER, create_sender, ACCEPT_TYPE, ACCEPT_USERS, accept_names, CHANNEL_TYPE, SENDER_NAME, 
    ISTOP, NOTICETYPE, isUrgency
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.city.management.collection.model.base.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_ag_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.city.management.collection.model.base.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_ag_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_ag_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_ag_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.city.management.collection.model.base.NoticeExample">
    delete from t_ag_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.city.management.collection.model.base.Notice">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ag_notice (id, TENANT_ID, TITLE, 
      SEND_TIME, FILE_PATH, BEGIN_TIME, 
      IS_SEND, STATUS, END_TIME, 
      SENDER, create_sender, ACCEPT_TYPE, 
      ACCEPT_USERS, accept_names, CHANNEL_TYPE, 
      SENDER_NAME, ISTOP, NOTICETYPE, 
      isUrgency, CONTENT)
    values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{filePath,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{isSend,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{endTime,jdbcType=TIMESTAMP}, 
      #{sender,jdbcType=VARCHAR}, #{createSender,jdbcType=VARCHAR}, #{acceptType,jdbcType=VARCHAR}, 
      #{acceptUsers,jdbcType=VARCHAR}, #{acceptNames,jdbcType=VARCHAR}, #{channelType,jdbcType=VARCHAR}, 
      #{senderName,jdbcType=VARCHAR}, #{istop,jdbcType=VARCHAR}, #{noticetype,jdbcType=VARCHAR}, 
      #{isurgency,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.city.management.collection.model.base.Notice">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ag_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="tenantId != null">
        TENANT_ID,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="filePath != null">
        FILE_PATH,
      </if>
      <if test="beginTime != null">
        BEGIN_TIME,
      </if>
      <if test="isSend != null">
        IS_SEND,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="endTime != null">
        END_TIME,
      </if>
      <if test="sender != null">
        SENDER,
      </if>
      <if test="createSender != null">
        create_sender,
      </if>
      <if test="acceptType != null">
        ACCEPT_TYPE,
      </if>
      <if test="acceptUsers != null">
        ACCEPT_USERS,
      </if>
      <if test="acceptNames != null">
        accept_names,
      </if>
      <if test="channelType != null">
        CHANNEL_TYPE,
      </if>
      <if test="senderName != null">
        SENDER_NAME,
      </if>
      <if test="istop != null">
        ISTOP,
      </if>
      <if test="noticetype != null">
        NOTICETYPE,
      </if>
      <if test="isurgency != null">
        isUrgency,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="createSender != null">
        #{createSender,jdbcType=VARCHAR},
      </if>
      <if test="acceptType != null">
        #{acceptType,jdbcType=VARCHAR},
      </if>
      <if test="acceptUsers != null">
        #{acceptUsers,jdbcType=VARCHAR},
      </if>
      <if test="acceptNames != null">
        #{acceptNames,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null">
        #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null">
        #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="istop != null">
        #{istop,jdbcType=VARCHAR},
      </if>
      <if test="noticetype != null">
        #{noticetype,jdbcType=VARCHAR},
      </if>
      <if test="isurgency != null">
        #{isurgency,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.city.management.collection.model.base.NoticeExample" resultType="java.lang.Long">
    select count(*) from t_ag_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_ag_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null">
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.filePath != null">
        FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        BEGIN_TIME = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSend != null">
        IS_SEND = #{record.isSend,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null">
        SENDER = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.createSender != null">
        create_sender = #{record.createSender,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptType != null">
        ACCEPT_TYPE = #{record.acceptType,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptUsers != null">
        ACCEPT_USERS = #{record.acceptUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptNames != null">
        accept_names = #{record.acceptNames,jdbcType=VARCHAR},
      </if>
      <if test="record.channelType != null">
        CHANNEL_TYPE = #{record.channelType,jdbcType=VARCHAR},
      </if>
      <if test="record.senderName != null">
        SENDER_NAME = #{record.senderName,jdbcType=VARCHAR},
      </if>
      <if test="record.istop != null">
        ISTOP = #{record.istop,jdbcType=VARCHAR},
      </if>
      <if test="record.noticetype != null">
        NOTICETYPE = #{record.noticetype,jdbcType=VARCHAR},
      </if>
      <if test="record.isurgency != null">
        isUrgency = #{record.isurgency,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_ag_notice
    set id = #{record.id,jdbcType=INTEGER},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      TITLE = #{record.title,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      BEGIN_TIME = #{record.beginTime,jdbcType=TIMESTAMP},
      IS_SEND = #{record.isSend,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      create_sender = #{record.createSender,jdbcType=VARCHAR},
      ACCEPT_TYPE = #{record.acceptType,jdbcType=VARCHAR},
      ACCEPT_USERS = #{record.acceptUsers,jdbcType=VARCHAR},
      accept_names = #{record.acceptNames,jdbcType=VARCHAR},
      CHANNEL_TYPE = #{record.channelType,jdbcType=VARCHAR},
      SENDER_NAME = #{record.senderName,jdbcType=VARCHAR},
      ISTOP = #{record.istop,jdbcType=VARCHAR},
      NOTICETYPE = #{record.noticetype,jdbcType=VARCHAR},
      isUrgency = #{record.isurgency,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_ag_notice
    set id = #{record.id,jdbcType=INTEGER},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      TITLE = #{record.title,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      BEGIN_TIME = #{record.beginTime,jdbcType=TIMESTAMP},
      IS_SEND = #{record.isSend,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      create_sender = #{record.createSender,jdbcType=VARCHAR},
      ACCEPT_TYPE = #{record.acceptType,jdbcType=VARCHAR},
      ACCEPT_USERS = #{record.acceptUsers,jdbcType=VARCHAR},
      accept_names = #{record.acceptNames,jdbcType=VARCHAR},
      CHANNEL_TYPE = #{record.channelType,jdbcType=VARCHAR},
      SENDER_NAME = #{record.senderName,jdbcType=VARCHAR},
      ISTOP = #{record.istop,jdbcType=VARCHAR},
      NOTICETYPE = #{record.noticetype,jdbcType=VARCHAR},
      isUrgency = #{record.isurgency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.city.management.collection.model.base.Notice">
    update t_ag_notice
    <set>
      <if test="tenantId != null">
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null">
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null">
        IS_SEND = #{isSend,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        SENDER = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="createSender != null">
        create_sender = #{createSender,jdbcType=VARCHAR},
      </if>
      <if test="acceptType != null">
        ACCEPT_TYPE = #{acceptType,jdbcType=VARCHAR},
      </if>
      <if test="acceptUsers != null">
        ACCEPT_USERS = #{acceptUsers,jdbcType=VARCHAR},
      </if>
      <if test="acceptNames != null">
        accept_names = #{acceptNames,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null">
        CHANNEL_TYPE = #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null">
        SENDER_NAME = #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="istop != null">
        ISTOP = #{istop,jdbcType=VARCHAR},
      </if>
      <if test="noticetype != null">
        NOTICETYPE = #{noticetype,jdbcType=VARCHAR},
      </if>
      <if test="isurgency != null">
        isUrgency = #{isurgency,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.city.management.collection.model.base.Notice">
    update t_ag_notice
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP},
      IS_SEND = #{isSend,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      SENDER = #{sender,jdbcType=VARCHAR},
      create_sender = #{createSender,jdbcType=VARCHAR},
      ACCEPT_TYPE = #{acceptType,jdbcType=VARCHAR},
      ACCEPT_USERS = #{acceptUsers,jdbcType=VARCHAR},
      accept_names = #{acceptNames,jdbcType=VARCHAR},
      CHANNEL_TYPE = #{channelType,jdbcType=VARCHAR},
      SENDER_NAME = #{senderName,jdbcType=VARCHAR},
      ISTOP = #{istop,jdbcType=VARCHAR},
      NOTICETYPE = #{noticetype,jdbcType=VARCHAR},
      isUrgency = #{isurgency,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.city.management.collection.model.base.Notice">
    update t_ag_notice
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      FILE_PATH = #{filePath,jdbcType=VARCHAR},
      BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP},
      IS_SEND = #{isSend,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      SENDER = #{sender,jdbcType=VARCHAR},
      create_sender = #{createSender,jdbcType=VARCHAR},
      ACCEPT_TYPE = #{acceptType,jdbcType=VARCHAR},
      ACCEPT_USERS = #{acceptUsers,jdbcType=VARCHAR},
      accept_names = #{acceptNames,jdbcType=VARCHAR},
      CHANNEL_TYPE = #{channelType,jdbcType=VARCHAR},
      SENDER_NAME = #{senderName,jdbcType=VARCHAR},
      ISTOP = #{istop,jdbcType=VARCHAR},
      NOTICETYPE = #{noticetype,jdbcType=VARCHAR},
      isUrgency = #{isurgency,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>