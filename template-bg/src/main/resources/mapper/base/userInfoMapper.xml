<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.city.management.collection.mapper.base.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.city.management.collection.model.base.UserInfo">
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, password, account_id, account_type, date_created, date_updated, created_by, 
    updated_by
  </sql>
  <select id="selectByExample" parameterType="com.city.management.collection.model.base.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.city.management.collection.model.base.UserInfoExample">
    delete from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.city.management.collection.model.base.UserInfo">
    insert into cm_userinfo (username, password, account_id, 
      account_type, date_created, date_updated, 
      created_by, updated_by)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=VARCHAR}, #{dateCreated,jdbcType=TIMESTAMP}, #{dateUpdated,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.city.management.collection.model.base.UserInfo">
    insert into cm_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="dateUpdated != null">
        date_updated,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdated != null">
        #{dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.city.management.collection.model.base.UserInfoExample" resultType="java.lang.Long">
    select count(*) from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cm_userinfo
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.dateCreated != null">
        date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateUpdated != null">
        date_updated = #{record.dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cm_userinfo
    set username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      date_updated = #{record.dateUpdated,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.city.management.collection.model.base.Userinfo">
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, password, account_id, account_type, date_created, date_updated, created_by, 
    updated_by
  </sql>
  <select id="selectByExample" parameterType="com.city.management.collection.model.base.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.city.management.collection.model.base.UserinfoExample">
    delete from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.city.management.collection.model.base.Userinfo">
    insert into cm_userinfo (username, password, account_id, 
      account_type, date_created, date_updated, 
      created_by, updated_by)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=VARCHAR}, #{dateCreated,jdbcType=TIMESTAMP}, #{dateUpdated,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.city.management.collection.model.base.Userinfo">
    insert into cm_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="dateUpdated != null">
        date_updated,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdated != null">
        #{dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.city.management.collection.model.base.UserinfoExample" resultType="java.lang.Long">
    select count(*) from cm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cm_userinfo
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.dateCreated != null">
        date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateUpdated != null">
        date_updated = #{record.dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cm_userinfo
    set username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      date_updated = #{record.dateUpdated,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
	
	<select id="getUserList" parameterType="string" resultType="HashMap">
	  	select * from cm_userinfo;
	</select>
    <update id="updateUserInfo" parameterType="com.city.management.collection.model.UserInfo">
        update cm_userinfo set
        password=#{password},
        date_updated=now()
        <!-- 
        &amp;lt;isNotNull  prepend="," property="username"&amp;gt; 
        	username=#{userName} 
        &amp;lt;/isNotNull&amp;gt;
         -->
        where account_id=#{accountId}
    </update>

    <delete id="delete" parameterType="string">
        DELETE FROM userinfo WHERE id=#{id}
    </delete>

    <select id="getUserInfoByName" parameterType="string" resultType="com.city.management.collection.model.UserInfo">
        select username "userName",password,account_id "accountId",account_type "accountType" 
        from cm_userinfo where username = #{userName}
    </select>
    <select id="getUserInfoById" parameterType="string" resultType="com.city.management.collection.model.UserInfo">
        select username "userName",password,account_id "accountId",account_type "accountType" 
        from cm_userinfo where account_id = #{accountId}
    </select>
    <select id="getRoleByUsername" parameterType="string" resultType="HashMap">
	  	select u.username,ur.role_id "roleId" from cm_userinfo u,cm_user_roles ur
	  	where u.account_id=ur.account_id
	  	and u.username=#{userName}
	</select>
	<select id="getRoleAndPermissionByUsername" parameterType="string" resultType="HashMap">
	  	select r.role_name "roleName",p.permission_name "permissionName",p.permission_url "permissionUrl"
        from cm_userinfo u,cm_user_roles ur,cm_role_permission rp,cm_permission p,cm_role r
	  	where u.account_id=ur.account_id
	  		and ur.role_id=rp.role_id
	  		and rp.permission_id=p.permission_id
	  		and ur.role_id=r.role_id
	  		and u.username=#{userName}
	</select>

</mapper>