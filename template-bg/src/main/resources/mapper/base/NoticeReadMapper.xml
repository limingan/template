<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.city.management.collection.mapper.base.NoticeReadMapper">
  <resultMap id="BaseResultMap" type="com.city.management.collection.model.base.NoticeRead">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="opt_time" jdbcType="TIMESTAMP" property="optTime" />
    <result column="accept_user_id" jdbcType="VARCHAR" property="acceptUserId" />
    <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted" />
    <result column="accept_user" jdbcType="VARCHAR" property="acceptUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notice_id, status, opt_time, accept_user_id, is_deleted, accept_user
  </sql>
  <select id="selectByExample" parameterType="com.city.management.collection.model.base.NoticeReadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_ag_notice_read
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ag_notice_read
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_ag_notice_read
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.city.management.collection.model.base.NoticeReadExample">
    delete from t_ag_notice_read
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.city.management.collection.model.base.NoticeRead">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ag_notice_read (id, notice_id, status, 
      opt_time, accept_user_id, is_deleted, 
      accept_user)
    values (#{id,jdbcType=INTEGER}, #{noticeId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{optTime,jdbcType=TIMESTAMP}, #{acceptUserId,jdbcType=VARCHAR}, #{isDeleted,jdbcType=VARCHAR}, 
      #{acceptUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.city.management.collection.model.base.NoticeRead">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ag_notice_read
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="optTime != null">
        opt_time,
      </if>
      <if test="acceptUserId != null">
        accept_user_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="acceptUser != null">
        accept_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="optTime != null">
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptUserId != null">
        #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="acceptUser != null">
        #{acceptUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.city.management.collection.model.base.NoticeReadExample" resultType="java.lang.Long">
    select count(*) from t_ag_notice_read
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_ag_notice_read
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.optTime != null">
        opt_time = #{record.optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptUserId != null">
        accept_user_id = #{record.acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptUser != null">
        accept_user = #{record.acceptUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_ag_notice_read
    set id = #{record.id,jdbcType=INTEGER},
      notice_id = #{record.noticeId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      opt_time = #{record.optTime,jdbcType=TIMESTAMP},
      accept_user_id = #{record.acceptUserId,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      accept_user = #{record.acceptUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.city.management.collection.model.base.NoticeRead">
    update t_ag_notice_read
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="optTime != null">
        opt_time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptUserId != null">
        accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="acceptUser != null">
        accept_user = #{acceptUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.city.management.collection.model.base.NoticeRead">
    update t_ag_notice_read
    set notice_id = #{noticeId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      opt_time = #{optTime,jdbcType=TIMESTAMP},
      accept_user_id = #{acceptUserId,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=VARCHAR},
      accept_user = #{acceptUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>